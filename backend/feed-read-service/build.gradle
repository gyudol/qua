plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'checkstyle'
}

checkstyle {
	maxWarnings = 0
	configFile = file("checkstyle/google_checks.xml")
	toolVersion = "10.18.0"
}

group = 'com.mulmeong'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jar {
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	// Spring Boot Starter
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// Spring Cloud Config
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Kafka
	implementation 'org.springframework.kafka:spring-kafka'

	// Database
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

	// Feign client
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// QueryDSL
	implementation 'com.querydsl:querydsl-core:5.0.0'
	implementation('com.querydsl:querydsl-mongodb') {
		exclude group: 'org.mongodb', module: 'mongo-java-driver'
	}
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0'
	annotationProcessor 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava {
	options.compilerArgs += [
			"-processor", 'lombok.launch.AnnotationProcessorHider$AnnotationProcessor,org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor'
	]
}
